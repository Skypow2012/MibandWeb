{"version":3,"sources":["images/chrome-logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Panel","Collapse","Title","Typography","Paragraph","log","msg","Array","prototype","slice","call","arguments","join","console","$","append","concat","delay","ms","Promise","resolve","setTimeout","NotSupport","react_default","a","createElement","style","backgroundColor","textAlign","src","chrome_logo","width","alt","fontSize","collapse","header","key","href","Component","Info","table","dataSource","this","props","loading","isLoading","columns","title","dataIndex","pagination","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","support","connected","connecting","info","miband","bluetooth","hrm","rate","shake","defer","window","location","protocol","navigator","setState","substring","length","_connect","asyncToGenerator","regenerator_default","mark","_callee","device","server","ped","wrap","_context","prev","next","requestDevice","filters","services","MiBand","advertisementService","optionalServices","sent","addEventListener","notice_close","gatt","disconnect","connect","init","showNotification","getTime","t0","getBatteryInfo","t1","getHwRevision","t2","getSwRevision","t3","getSerial","t4","time","battery","hw_ver","sw_ver","serial","getPedometerStats","value","toLocaleString","level","steps","distance","calories","on","t5","stop","apply","_test_all","_callee2","_context2","JSON","stringify","waitButton","t6","hrmRead","t7","hrmStart","hrmStop","_notice_phone","_callee3","_context3","_notice_message","_callee4","_context4","_notice_vibrate","_callee5","_context5","_notice_close","_callee6","_context6","_notice_unlimited","_callee8","_context8","_callee7","_context7","hrm_start","_hrm_start","_callee9","_context9","hrm_stop","_hrm_stop","_callee10","_context10","_hrm_switch","_callee11","_context11","_shake_mode","_callee13","_context13","_f","_callee12","_context12","change_defer","defaultActiveKey","App_Info","className","id","es_button","block","onClick","type","disabled","vibrate","e","es_switch","onChange","row","col","span","slider","min","max","input_number","marginLeft","typography","App_NotSupport","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ce8e130.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chrome-logo.c365dfbe.svg\";","import React, {Component} from 'react';\nimport MiBand from 'miband';\nimport {Table, Collapse, Button, Switch, Slider, InputNumber, Row, Col, Typography} from 'antd';\nimport $ from 'jquery';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport chrome_logo from './images/chrome-logo.svg';\n\nconst Panel = Collapse.Panel;\nconst {Title, Paragraph} = Typography;\n\nfunction log() {\n    const msg = [...arguments].join(' ');\n    console.log(msg);\n    $('.connect-log').append(`<p>${msg}</p>`)\n}\n\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nclass NotSupport extends Component {\n    render() {\n        return (\n            <div>\n                <h1>MibandWeb</h1>\n                <h2 style={{backgroundColor: 'red'}}>你的浏览器不支持WebBluetooth</h2>\n                <div style={{textAlign: 'center'}}>\n                    <img src={chrome_logo} width=\"50%\" alt=\"\"/>\n                    <p style={{fontSize: '20px'}}>请使用Chrome浏览器或关闭此页面</p>\n                </div>\n                <p>下载方法</p>\n                <Collapse>\n                    <Panel header=\"Android\" key=\"1\">\n                        <p>应用商店搜索Chrome，找到真正的Chrome下载并安装</p>\n                    </Panel>\n                    <Panel header=\"Windows\" key=\"2\">\n                        <p>在官网下载<a href=\"https://www.google.cn/chrome\">https://www.google.cn/chrome</a></p>\n                        <p>打不开官网就使用这个<a href=\"https://www.lanzous.com/i42tzje\">https://www.lanzous.com/i42tzje</a></p>\n                    </Panel>\n                    <Panel header=\"Other\" key=\"3\">\n                        不知道呢。。\n                    </Panel>\n                </Collapse>\n                <p>这是干啥的</p>\n                <p>网页上控制你的小米手环2，让它震动，震动，震动。。</p>\n                <p><a href=\"https://github.com/kamino-space/MibandWeb\">Github</a></p>\n            </div>\n        )\n    }\n}\n\nclass Info extends Component {\n    render() {\n        const columns = [{\n            title: '名称',\n            dataIndex: 'key',\n            key: 'key',\n        }, {\n            title: '值',\n            dataIndex: 'value',\n            key: 'value',\n        }];\n        return (\n            <Table\n                dataSource={this.props.dataSource}\n                loading={this.props.isLoading}\n                columns={columns}\n                pagination={false}\n            />\n        )\n    }\n}\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            support: false,\n            connected: false,\n            connecting: false,\n            info: [],\n            miband: false,\n            bluetooth: false,\n            hrm: false,\n            rate: 0,\n            shake: false,\n            defer: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (window.location.protocol === \"http:\") {\n            window.location.href = \"https:\" + window.location.href.substring(window.location.protocol.length);\n            return;\n        }\n        const bluetooth = navigator.bluetooth;\n        if (!bluetooth) {\n            log('WebBluetooth is not supported by your browser!');\n            return;\n        }\n        this.setState({bluetooth: bluetooth, support: true});\n    }\n\n    render() {\n        const _this = this;\n\n        async function connect() {\n            log('Start connect');\n\n            _this.setState({connecting: true});\n\n            try {\n                log('Requesting Bluetooth Device...');\n                const device = await _this.state.bluetooth.requestDevice({\n                    filters: [\n                        {services: [MiBand.advertisementService]}\n                    ],\n                    optionalServices: MiBand.optionalServices\n                });\n\n                device.addEventListener('gattserverdisconnected', () => {\n                    log('Device disconnected');\n                    notice_close();\n                    _this.setState({connecting: false, connected: false});\n                });\n                await device.gatt.disconnect();\n                log('Connecting to the device...');\n\n                const server = await device.gatt.connect();\n                log('Connected');\n\n                log('Connecting to your Miband...');\n                let miband = new MiBand(server);\n                await miband.init();\n                log('Finished. Please wait.');\n\n                _this.setState({connected: true});\n\n                await miband.showNotification('message');\n\n                let info = {\n                    time: await miband.getTime(),\n                    battery: await miband.getBatteryInfo(),\n                    hw_ver: await miband.getHwRevision(),\n                    sw_ver: await miband.getSwRevision(),\n                    serial: await miband.getSerial(),\n                };\n\n                let ped = await miband.getPedometerStats();\n\n                _this.setState({\n                    info: [\n                        {key: '时间', value: info.time.toLocaleString()},\n                        {key: '电量', value: info.battery.level + '%'},\n                        {key: '步数', value: ped.steps},\n                        {key: '里程', value: ped.distance + 'm'},\n                        {key: '消耗', value: ped.calories + 'cal'},\n                        {key: '硬件', value: info.hw_ver},\n                        {key: '软件', value: info.sw_ver},\n                    ]\n                });\n\n                _this.setState({miband: miband});\n\n                miband.on('heart_rate', (rate) => {\n                    _this.setState({rate: rate});\n                    log('Heart Rate:', rate)\n                });\n\n                delay(0);\n            } catch (error) {\n                log('ERROR: ', error);\n            }\n\n            _this.setState({connecting: false})\n        }\n\n        async function test_all() {\n            log('ACTION: test all');\n            let miband = _this.state.miband;\n\n            let info = {\n                time: await miband.getTime(),\n                battery: await miband.getBatteryInfo(),\n                hw_ver: await miband.getHwRevision(),\n                sw_ver: await miband.getSwRevision(),\n                serial: await miband.getSerial(),\n            };\n\n            log(`HW ver: ${info.hw_ver}  SW ver: ${info.sw_ver}`);\n            info.serial && log(`Serial: ${info.serial}`);\n            log(`Battery: ${info.battery.level}%`);\n            log(`Time: ${info.time.toLocaleString()}`);\n\n            let ped = await miband.getPedometerStats();\n            log('Pedometer:', JSON.stringify(ped));\n\n            log('Notifications demo...');\n            await miband.showNotification('message');\n            await delay(3000);\n            await miband.showNotification('phone');\n            await delay(5000);\n            await miband.showNotification('off');\n\n            log('Tap MiBand button, quick!');\n            miband.on('button', () => log('Tap detected'));\n            try {\n                await miband.waitButton(10000)\n            } catch (e) {\n                log('OK, nevermind ;)')\n            }\n\n            log('Heart Rate Monitor (single-shot)');\n            log('Result:', await miband.hrmRead());\n\n            log('Heart Rate Monitor (continuous for 30 sec)...');\n            miband.on('heart_rate', (rate) => {\n                log('Heart Rate:', rate)\n            });\n            await miband.hrmStart();\n            await delay(30000);\n            await miband.hrmStop();\n\n            //log('RAW data (no decoding)...')\n            //miband.rawStart();\n            //await delay(30000);\n            //miband.rawStop();\n\n            log('Finished.')\n        }\n\n        async function notice_phone() {\n            await notice_close();\n            log('ACTION: phone notice');\n            await _this.state.miband.showNotification('phone');\n        }\n\n        async function notice_message() {\n            await notice_close();\n            log('ACTION: message notice');\n            await _this.state.miband.showNotification('message');\n        }\n\n        async function notice_vibrate() {\n            await notice_close();\n            log('ACTION: vibrate notice');\n            await _this.state.miband.showNotification('vibrate');\n        }\n\n        async function notice_close() {\n            log('ACTION: close notice');\n            _this.setState({shake: false});\n            await _this.state.miband.showNotification('off');\n        }\n\n        async function notice_unlimited() {\n            await notice_close();\n            log('ACTION: unlimited notice');\n            _this.setState({shake: true}, async function () {\n                while (_this.state.shake) {\n                    await _this.state.miband.showNotification('vibrate');\n                    await delay(1000);\n                }\n            });\n        }\n\n        async function hrm_start() {\n            log('ACTION: start heart rate monitor');\n            await _this.state.miband.hrmStart();\n        }\n\n        async function hrm_stop() {\n            log('ACTION: stop heart rate monitor');\n            await _this.state.miband.hrmStop();\n        }\n\n        async function hrm_switch() {\n            _this.setState({hrm: !_this.state.hrm});\n            _this.state.hrm ? hrm_stop() : hrm_start();\n        }\n\n        async function shake_mode() {\n            await notice_close();\n            log('ACTION: start shake mode');\n            _this.setState({shake: true}, async function f() {\n                while (_this.state.shake) {\n                    await _this.state.miband.showNotification('vibrate');\n                    await delay(_this.state.defer * 1000 + 500);\n                }\n            });\n        }\n\n        function boom() {\n            try {\n                log('start boom');\n                navigator.vibrate(10000);\n            } catch (e) {\n                log('ERROR', e);\n            }\n        }\n\n        function change_defer(value) {\n            log('ACTION: set defer ', value);\n            _this.setState({defer: value});\n        }\n\n        if (this.state.support) {\n            if (!this.state.connected) {\n                return (\n                    <div className=\"container\">\n                        <h1>MibandWeb</h1>\n                        <h2>点击CONNECT连接到手环</h2>\n                        <div className=\"connect-line\">\n                            <div className=\"connect-btn\" onClick={connect}>\n                                {this.state.connecting ? 'WAIT' : 'CONNECT'}\n                            </div>\n                        </div>\n                        <div className=\"connect-log\">\n                            <h3>connect log</h3>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                        <h1>MibandWeb</h1>\n                        <h2>{this.state.connected ? 'CONNECTED' : 'CONNECTING'}</h2>\n                        <Collapse defaultActiveKey={['1']}>\n                            <Panel header=\"INFO\" key=\"1\">\n                                <Info dataSource={this.state.info} isLoading={!this.state.connected}/>\n                            </Panel>\n                            <Panel header=\"LOG\" key=\"4\">\n                                <div className=\"connect-log\" id=\"log\">\n                                    <h3>connect log</h3>\n                                </div>\n                            </Panel>\n                            <Panel header=\"ACTION\" key=\"2\">\n                                <Button block onClick={notice_phone}>电话通知</Button><br/>\n                                <Button block onClick={notice_message}>短信通知</Button><br/>\n                                <Button block onClick={notice_vibrate}>震动通知</Button><br/>\n                                <Button block onClick={notice_unlimited}>无限震动</Button><br/>\n                                <Button block onClick={notice_close} type=\"primary\">关闭通知</Button><br/>\n                                <Button block onClick={test_all} disabled>全部测试</Button><br/>\n                                <Button block onClick={boom} type=\"danger\">爆炸程序</Button>\n                            </Panel>\n                            <Panel header=\"HRM\" key=\"3\">\n                                <p>\n                                    <span>心率检测开关&nbsp;&nbsp;</span>\n                                    <Switch onChange={hrm_switch}/>\n                                </p>\n                                <p className=\"hrm-rate\">\n                                    <span>{this.state.rate}</span>\n                                    <span className=\"hrm-unit\">BPM</span>\n                                </p>\n                            </Panel>\n                            <Panel header=\"SHAKE\" key=\"5\">\n                                <h4>选择震动间隔</h4>\n                                <Row>\n                                    <Col span={12}>\n                                        <Slider\n                                            min={0}\n                                            max={60}\n                                            onChange={change_defer}\n                                            value={typeof this.state.defer === 'number' ? this.state.defer : 0}\n                                        />\n                                    </Col>\n                                    <Col span={4}>\n                                        <InputNumber\n                                            min={0}\n                                            max={60}\n                                            style={{marginLeft: 16}}\n                                            value={this.state.defer}\n                                            onChange={change_defer}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Button block onClick={shake_mode}>开始</Button>\n                                <Button block onClick={notice_close}>关闭</Button>\n                            </Panel>\n                            <Panel header=\"ABOUT\" key=\"6\">\n                                <Typography>\n                                    <Title level={3}>VERSION</Title>\n                                    <Paragraph>\n                                        v0.1.1(build in 2019/05/08)\n                                    </Paragraph>\n                                    <Title level={3}>LINKS</Title>\n                                    <Paragraph>\n                                        <ul>\n                                            <li><a href=\"https://github.com/kamino-space/MibandWeb\">Github</a></li>\n                                            <li><a href=\"https://imea.me\">Author</a></li>\n                                        </ul>\n                                    </Paragraph>\n\n                                </Typography>\n                            </Panel>\n                        </Collapse>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <NotSupport/>\n            )\n        }\n    }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}